{"version":3,"sources":["components/paso-gui/metric-form.jsx","services/handleContract.js","components/paso-gui/load-contract-form.jsx","fixtures/contract.jsx","fixtures/addresses.jsx","utils/json2html.js","components/paso-gui/metrics.jsx","components/paso-gui/head.jsx","components/paso-gui/error.jsx","utils/sol-parser.mjs","components/paso-gui/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["MetricForm","className","id","rows","type","onClick","props","onFormSubmit","document","getElementById","value","Component","HandleContract","fetchContract","url","address","fetch","then","response","json","data","sourceCode","result","SourceCode","showContract","showErrorMessage","hideErrorMessage","invalidAddrEl","classList","remove","add","contractCodeEl","this","addrEl","LoadContractForm","componentDidMount","onSubmit","setState","loading","finally","render","data-list","data-minchars","placeholder","disabled","state","json2html","types","items","Object","keys","map","v","i","push","key","Metrics","metric","error","Fragment","Head","src","Error","errors","e","solParse","code","ast_j","window","SolidityParser","parse","loc","ast_s","JSON","stringify","metrics","mapping","functions","payable","events","modifiers","contracts_definition","addresses","contracts","libraries","interfaces","version","get_version","total_lines","end","line","comments","get_comments","blanks","match","length","reg","RegExp","PasoGui","handleFormSubmit","data_input","App","Boolean","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb1f739c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class MetricForm extends Component {\n    render() {\n        return (\n            <div className=\"card mt-2\">\n                <div className=\"card-body\">\n                    <div className=\"form-group\">\n                        <textarea\n                            className=\"form-control font-weight-light form-control-sm\"\n                            id=\"sc_code\"\n                            rows=\"10\"\n                        ></textarea>\n                    </div>\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-block\"\n                        onClick={() =>\n                            this.props.onFormSubmit(\n                                document.getElementById(\"sc_code\").value\n                            )\n                        }\n                    >\n                        Compute the Solidity Metrics\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n","export class HandleContract {\n    constructor(props) {\n        this.address = props.addrEl.value;\n        this.invalidAddrEl = props.invalidAddrEl;\n        this.contractCodeEl = props.contractCodeEl;\n        return this.fetchContract();\n    }\n    fetchContract = () => {\n        let url = `https://api.etherscan.io/api?module=contract&action=getsourcecode&address=${this.address}&apikey=E5KM3HIGE2PV4RR763IQSXGZIV6UV638P2`;\n        return fetch(url)\n            .then((response) => response.json())\n            .then((data) => {\n                this.sourceCode = data.result[0].SourceCode;\n                this.sourceCode ? this.showContract() : this.showErrorMessage();\n            });\n    };\n    hideErrorMessage = () => this.invalidAddrEl.classList.remove(\"d-block\");\n\n    showErrorMessage = () => this.invalidAddrEl.classList.add(\"d-block\");\n\n    showContract = () => {\n        this.contractCodeEl.value = this.sourceCode;\n        this.hideErrorMessage();\n    };\n}\n","import React, { Component } from \"react\";\nimport { contract, addresses } from \"../../fixtures\";\nimport { HandleContract } from \"../../services/handleContract\";\nexport default class LoadContractForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { loading: false };\n    }\n\n    componentDidMount = () => {\n        this.addrEl = document.getElementById(\"address\");\n        this.invalidAddrEl = document.getElementById(\"invalid\");\n        this.contractCodeEl = document.getElementById(\"sc_code\");\n        document.getElementById(\"sc_code\").value = contract;\n    };\n\n    onSubmit = () => {\n        this.setState({ loading: true });\n        new HandleContract(this).finally(() =>\n            this.setState({ loading: false })\n        );\n    };\n\n    render = () => (\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <input\n                            className=\"form-control form-control-sm font-weight-light\"\n                            id=\"address\"\n                            data-list={addresses}\n                            data-minchars=\"1\"\n                            placeholder=\"Write a contract's address (0x7de6783f26e024ef2db774a0fd02742b11891d3f)\"\n                        />\n                    </div>\n                    <div className=\"col-6\">\n                        <button\n                            className=\"btn btn-sm btn-secondary btn-block\"\n                            onClick={() => this.onSubmit()}\n                            disabled={this.state.loading}\n                        >\n                            <span\n                                className={`spinner-border spinner-border-sm ${this.state.loading ? \"mr-2\" : \"d-none\"\n                                    }`}\n                            ></span>\n                            Upload a Smart Contract from an address\n                        </button>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col pl-10\">\n                        <div className=\"invalid-feedback\" id=\"invalid\">\n                            Please choose a valid contract address such as:\n                            0x114ef3df5820d55d32045afaa15d8cc7ba2156d7\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","export const contract = `/***** [You can write, edit or copy and paste a smart contract code here] *******/\n\npragma solidity ^0.8.7;\n\ncontract CharitySplitterFactory {\n    mapping (address => CharitySplitter) public charitySplitters;\n    uint public errorCount;\n    event ErrorHandled(string reason);\n    event ErrorNotHandled(bytes reason);\n    function createCharitySplitter(address charityOwner) public {\n        try new CharitySplitter(charityOwner)\n            returns (CharitySplitter newCharitySplitter) \n        {\n            charitySplitters[msg.sender] = newCharitySplitter;\n        } catch {\n            errorCount++;\n        }\n    }\n}`;\n","export const addresses =\n    \"0x0b9f1160c8143ff771ac4a05e6cfbc4a6e4e5702,0x7de6783f26e024ef2db774a0fd02742b11891d3f, 0x26e8bcf9c18c6ae5f3cdf7331e84803aeef086eb, 0x5870a2e13341463f780a2fe16f5444d087825b87, 0x549e5133e51121affafab7cc760f830db08d56fd\";\n","import React from \"react\";\n\nexport function json2html(types) {\n    const items = [];\n    Object.keys(types).map((v, i) =>\n        items.push(\n            <tr key={i}>\n                <th>{v}</th>\n                <td>{types[v]}</td>\n            </tr>\n        )\n    );\n    return items;\n};\n","import React, { Component } from \"react\";\nimport { json2html } from \"../../utils/json2html\";\n\nclass Metrics extends Component {\n    render = () => {\n        try {\n            return (\n                <table className=\"table table-hover table-sm table-bordered\">\n                    <tbody>{json2html(this.props.metric)}</tbody>\n                </table>\n            );\n        } catch (error) {\n            return <React.Fragment></React.Fragment>;\n        }\n    };\n}\n\nexport default Metrics;\n","import React, { Component } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\n\nexport default class Head extends Component {\n    render = () => {\n        return (\n            <HelmetProvider>\n                <Helmet>\n                    <script src=\"./index.iife.js\" type=\"text/javascript\" />\n                    <title>PASO: SOlidity-</title>\n                </Helmet>\n                <h4 className=\"text-center font-weight-lighter font-italic pt-2\">\n                    PASO (PArse SOlidity smart contract code)\n                </h4>\n            </HelmetProvider>\n        );\n    };\n}\n","import React, { Component } from \"react\";\nimport { json2html } from \"../../utils/json2html\";\n\nclass Error extends Component {\n    render = () => {\n        try {\n            return (\n                <table className=\"table table-hover\">\n                    <tbody>{json2html(this.props.errors[0])}</tbody>\n                </table>\n            );\n        } catch (e) {\n            return <React.Fragment></React.Fragment>;\n        }\n    };\n}\n\nexport default Error;\n","export function solParse(code) {\n    const ast_j = window.SolidityParser.parse(code, { loc: true });\n\n    const ast_s = JSON.stringify(ast_j);\n    const metrics = {\n        mapping: '\"type\":\"Mapping\"',\n        functions: '\"type\":\"FunctionDefinition\"',\n        payable: '\"stateMutability\":\"payable\"',\n        events: '\"type\":\"EventDefinition\"',\n        modifiers: '\"type\":\"ModifierDefinition\"',\n        contracts_definition: '\"type\":\"ContractDefinition\"',\n        addresses: '\"type\":\"ElementaryTypeName\",\"name\":\"address\"',\n        contracts: '\"kind\":\"contract\"',\n        libraries: '\"kind\":\"library\"',\n        interfaces: '\"kind\":\"interface\"',\n    };\n    let result = {\n        version: get_version(ast_s),\n        total_lines: ast_j.loc.end.line,\n        comments: get_comments(code),\n        blanks: code.match(/((\\r\\n|\\n|\\r)$)|(^(\\r\\n|\\n|\\r))|^\\s*$/gm).length,\n    };\n    for (const metric in metrics) {\n        let reg = metrics[metric];\n        result[metric] = (ast_s.match(new RegExp(reg, \"g\")) || []).length;\n    }\n    return result;\n}\n\nconst get_comments = (code) => {\n    const match = code.match(\n        /(\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\/)|(\\/\\/.*)/g\n    );\n    return match ? match.length : 0;\n};\n\nconst get_version = (ast_s) => {\n    let version = ast_s.match(\n        /\"name\":\"solidity\",\"value\":\"\\^(\\d{1,}.\\d{1,}.\\d{1,})/\n    );\n    return version ? version[1] : \"n/a\";\n};\n","import React, { Component } from \"react\";\nimport MetricForm from \"./metric-form\";\nimport LoadContractForm from \"./load-contract-form\";\nimport Metrics from \"./metrics\";\nimport Head from \"./head\";\nimport Error from \"./error\";\nimport { solParse } from \"../../utils/sol-parser\";\n\nexport default class PasoGui extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    handleFormSubmit = data_input => {\n        try {\n            this.setState({\n                metric: solParse(data_input)\n            });\n        } catch (error) {\n            this.setState({\n                metric: null,\n                errors: error.errors\n            });\n        }\n    };\n    render = () => {\n        return (\n            <main className=\"container\">\n                <Head />\n                <LoadContractForm />\n                <MetricForm onFormSubmit={this.handleFormSubmit} />\n                <Metrics metric={this.state.metric} />\n                <Error errors={this.state.errors} />\n            </main>\n        );\n    };\n}\n","import React, { Component } from \"react\";\nimport PasoGui from \"./components/paso-gui/\";\n\nexport default class App extends Component {\n    render() {\n        return <PasoGui />;\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}